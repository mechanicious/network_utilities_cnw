{"version":3,"sources":["webpack:///webpack/bootstrap bed0a07205ccbb47c714","webpack:///./js/main.js","webpack:///./js/JSNXWrapper.js","webpack:///./js/PseudoWeightedEdgeGraph.js"],"names":["window","pweg","jsnxw","document","addEventListener","g1p","getElementById","g1n","g1r","g1c","g1ic","g1icd","g1cc","g1rd","g1cd","g1pd","g1nd","g1tc","g1tdc","g1tlc","varsInputd","adjMat","nodeDeg","nodeDegd","adjMatd","paths","fieldGraphType","getElementsByName","isERGraph","isCycleGraph","isCompleteGraph","isTreeGraph","isGrid2dGraph","isCustomFromEdges","customEdgeGraphFile","doDraw","doRemoveNonTriangularNodes","doClearConnectedNodes","doRunEstimation","main","previousResizeHandler","previousGraph","previousGraphConfig","i","length","drawGraph","getAdjacencyMatrix","g","nodes","edges","checked","push","j","edgeFound","forEach","edge","initControls","parentNode","style","display","getRandomInt","min","max","Math","floor","random","usePreviousGraph","usePreviousGraphConfig","clear","jsnx","erdosRenyiGraph","value","innerHTML","cycleGraph","completeGraph","grid2dGraph","gw","element","withLabels","layoutAttr","charge","nodeAttr","r","nodeStyle","fill","d","Array","from","triangles","node","stroke","labelStyle","stickyDrag","degress","degree","values","reduce","sum","map","item","join","removeEventListener","bit","height","log10","pow","draw","parseInt","round","isolatedNodeCount","nodeCount","res","isFullyConnected","reverse","graphCliqueNumber","e","id","clearTimeout","setTimeout","reader","FileReader","readAsText","files","onload","evt","edgeList","target","result","split","numeric","fromEdgelist","field","parseFloat","removeNode","triangleCount","isolatedNodesCount","n","p","graph","theoreticTriangleCount","toFixed","theoreticIsolatedNodeCount","monsterSize","prompt","isNaN","alert","experimentTriangleCount","experimentIsolatedNodeCount","experimentGraphCliqueNumber","JSNXWrapper","_g","u","visited","walkRecursive","begin","previous","indexOf","v","endNode","previousNode","path","beginNode","step","PseudoWeightedEdgeGraph","_edges","sortedEdge","edgeBag","getEdge","getEdgePaths","dist","shortestPath","sortedDist","JSON","parse","stringify","sort","a","b","k"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;AC7DA;;;;AACA;;;;;;;;AAEAA,OAAOC,IAAP;AACAD,OAAOE,KAAP;;AAEAC,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAChD,QAAMC,MAAMF,SAASG,cAAT,CAAwB,gBAAxB,CAAZ;AACA,QAAMC,MAAMJ,SAASG,cAAT,CAAwB,eAAxB,CAAZ;AACA,QAAME,MAAML,SAASG,cAAT,CAAwB,cAAxB,CAAZ;AACA,QAAMG,MAAMN,SAASG,cAAT,CAAwB,iBAAxB,CAAZ;AACA,QAAMI,OAAOP,SAASG,cAAT,CAAwB,eAAxB,CAAb;;AAEA,QAAMK,QAAQR,SAASG,cAAT,CAAwB,uBAAxB,CAAd;AACA,QAAMM,OAAOT,SAASG,cAAT,CAAwB,iBAAxB,CAAb;;AAEA,QAAMO,OAAOV,SAASG,cAAT,CAAwB,sBAAxB,CAAb;AACA,QAAMQ,OAAOX,SAASG,cAAT,CAAwB,yBAAxB,CAAb;;AAEA,QAAMS,OAAOZ,SAASG,cAAT,CAAwB,wBAAxB,CAAb;AACA,QAAMU,OAAOb,SAASG,cAAT,CAAwB,uBAAxB,CAAb;;AAEA,QAAMW,OAAOd,SAASG,cAAT,CAAwB,mBAAxB,CAAb;AACA,QAAMY,QAAQf,SAASG,cAAT,CAAwB,6BAAxB,CAAd;;AAEA,QAAMa,QAAQhB,SAASG,cAAT,CAAwB,2BAAxB,CAAd;;AAEA,QAAMc,aAAajB,SAASG,cAAT,CAAwB,WAAxB,CAAnB;AACA,QAAMe,SAASlB,SAASG,cAAT,CAAwB,kBAAxB,CAAf;AACA,QAAMgB,UAAUnB,SAASG,cAAT,CAAwB,aAAxB,CAAhB;AACA,QAAMiB,WAAWpB,SAASG,cAAT,CAAwB,qBAAxB,CAAjB;AACA,QAAMkB,UAAUrB,SAASG,cAAT,CAAwB,0BAAxB,CAAhB;AACA,QAAMmB,QAAQtB,SAASG,cAAT,CAAwB,OAAxB,CAAd;;AAEA,QAAMoB,iBAAiBvB,SAASwB,iBAAT,CAA2B,WAA3B,CAAvB;;AAEA,QAAMC,YAAoBzB,SAASG,cAAT,CAAwB,WAAxB,CAA1B;AACA,QAAMuB,eAAoB1B,SAASG,cAAT,CAAwB,cAAxB,CAA1B;AACA,QAAMwB,kBAAoB3B,SAASG,cAAT,CAAwB,iBAAxB,CAA1B;AACA,QAAMyB,cAAoB5B,SAASG,cAAT,CAAwB,aAAxB,CAA1B;AACA,QAAM0B,gBAAoB7B,SAASG,cAAT,CAAwB,eAAxB,CAA1B;AACA,QAAM2B,oBAAoB9B,SAASG,cAAT,CAAwB,mBAAxB,CAA1B;;AAEA,QAAM4B,sBAA0B/B,SAASG,cAAT,CAAwB,qBAAxB,CAAhC;;AAEA,QAAM6B,SAAShC,SAASG,cAAT,CAAwB,QAAxB,CAAf;AACA,QAAM8B,6BAA6BjC,SAASG,cAAT,CAAwB,2BAAxB,CAAnC;AACA,QAAM+B,wBAAwBlC,SAASG,cAAT,CAAwB,uBAAxB,CAA9B;AACA,QAAMgC,kBAAkBnC,SAASG,cAAT,CAAwB,iBAAxB,CAAxB;;AAEA,QAAMiC,OAAOpC,SAASG,cAAT,CAAwB,MAAxB,CAAb;;AAGA,QAAIkC,8BAAJ;AACA,QAAIC,sBAAJ;AACA,QAAIC,4BAAJ;;AAEA,SAAI,IAAIC,IAAE,CAAV,EAAaA,IAAEjB,eAAekB,MAA9B,EAAsCD,GAAtC,EAA2C;AACvCjB,uBAAeiB,CAAf,EAAkBvC,gBAAlB,CAAmC,QAAnC,EAA6C,YAAM;AAC/CyC;AACH,SAFD;AAGH;;AAED;;;;;AAKA,aAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3B,YAAMC,QAAQD,EAAEC,KAAF,EAAd;AACA,YAAMC,QAAQF,EAAEE,KAAF,EAAd;AACA,YAAM5B,SAAS,EAAf;;AAEA,YAAGW,cAAckB,OAAd,KAA0B,IAA7B,EAAmC;AAC/B,mBAAO,CAAC,CAAC,EAAD,CAAD,CAAP;AACH;;AAP0B,mCASnBP,EATmB;AAUvBtB,mBAAO8B,IAAP,CAAY,EAAZ;;AAVuB,yCAWfC,CAXe;AAYnB,oBAAIC,YAAY,CAAhB;AACAJ,sBAAMK,OAAN,CAAc,UAACC,IAAD,EAAU;AACpB,wBAAIA,KAAK,CAAL,MAAYZ,EAAZ,IAAiBY,KAAK,CAAL,MAAYH,CAA9B,IAAqCG,KAAK,CAAL,MAAYH,CAAZ,IAAiBG,KAAK,CAAL,MAAYZ,EAArE,EAAwE;AACpEU,oCAAY,CAAZ;AACH;AACJ,iBAJD;AAKAhC,uBAAOsB,EAAP,EAAUS,CAAV,IAAeC,SAAf;AAlBmB;;AAWvB,iBAAI,IAAID,IAAE,CAAV,EAAaA,IAAEJ,MAAMJ,MAArB,EAA6BQ,GAA7B,EAAkC;AAAA,uBAA1BA,CAA0B;AAQjC;AAnBsB;;AAS3B,aAAI,IAAIT,KAAE,CAAV,EAAaA,KAAEK,MAAMJ,MAArB,EAA6BD,IAA7B,EAAkC;AAAA,kBAA1BA,EAA0B;AAWjC;;AAED,eAAOtB,MAAP;AACH;;AAED,aAASmC,YAAT,GAAwB;AACpBnD,YAAIoD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACApD,YAAIkD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACAnD,YAAIiD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACAlD,YAAIgD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;;AAEAhD,cAAM+C,KAAN,CAAYC,OAAZ,GAAsB,OAAtB;AACAjD,aAAKgD,KAAL,CAAWC,OAAX,GAAqB,OAArB;;AAEA;AACArB,wBAAgBoB,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;AACAnC,gBAAQkC,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAvC,mBAAWsC,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACH;;AAED,aAASC,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;AAC5B,eAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,MAAiBH,MAAMD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AAED,aAAShB,SAAT,GAA6E;AAAA,YAA1DqB,gBAA0D,uEAAvC,KAAuC;AAAA,YAAhCC,sBAAgC,uEAAP,KAAO;;AACzE;AACA,YAAID,qBAAqB,KAAzB,EAAgC;AAC5B,gBAAI,QAAOzB,aAAP,yCAAOA,aAAP,OAAyB,QAA7B,EAAuC;AACnCA,8BAAc2B,KAAd;AACH;;AAEDZ;;AAEA,gBAAI5B,UAAUsB,OAAV,KAAsB,IAA1B,EAAgC;AAC5BT,gCAAgBzC,OAAO+C,CAAP,GAAWsB,KAAKC,eAAL,CAAqB/D,IAAIgE,KAAzB,EAAgClE,IAAIkE,KAApC,CAA3B;;AAEAlE,oBAAIoD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACApD,oBAAIkD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACAnC,wBAAQkC,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACArB,gCAAgBoB,KAAhB,CAAsBC,OAAtB,GAAgC,cAAhC;AACAvC,2BAAWsC,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;;AAEA3C,qBAAKwD,SAAL,GAAiBjE,IAAIgE,KAArB;AACAxD,qBAAKyD,SAAL,GAAiBnE,IAAIkE,KAArB;AACH,aAXD,MAYK,IAAI1C,aAAaqB,OAAb,KAAyB,IAA7B,EAAmC;AACpCT,gCAAgBzC,OAAO+C,CAAP,GAAWsB,KAAKI,UAAL,CAAgBlE,IAAIgE,KAApB,CAA3B;;AAEAhE,oBAAIkD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACAnC,wBAAQkC,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACAvC,2BAAWsC,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACA3C,qBAAKwD,SAAL,GAAiBjE,IAAIgE,KAArB;AACH,aAPI,MAQA,IAAIzC,gBAAgBoB,OAAhB,KAA4B,IAAhC,EAAsC;AACvCT,gCAAgBzC,OAAO+C,CAAP,GAAWsB,KAAKK,aAAL,CAAmBnE,IAAIgE,KAAvB,CAA3B;;AAEAhE,oBAAIkD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACAnC,wBAAQkC,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACAvC,2BAAWsC,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;AACA3C,qBAAKwD,SAAL,GAAiBjE,IAAIgE,KAArB;AACH,aAPI,MAQA,IAAIvC,cAAckB,OAAd,KAA0B,IAA9B,EAAoC;AACrCT,gCAAgBzC,OAAO+C,CAAP,GAAWsB,KAAKM,WAAL,CAAiBnE,IAAI+D,KAArB,EAA4B9D,IAAI8D,KAAhC,CAA3B;;AAEA1D,qBAAK2D,SAAL,GAAiBhE,IAAI+D,KAArB;AACAzD,qBAAK0D,SAAL,GAAiB/D,IAAI8D,KAArB;;AAEA/D,oBAAIiD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACAlD,oBAAIgD,UAAJ,CAAeC,KAAf,CAAqBC,OAArB,GAA+B,OAA/B;AACAvC,2BAAWsC,KAAX,CAAiBC,OAAjB,GAA2B,OAA3B;;AAEAhD,sBAAM+C,KAAN,CAAYC,OAAZ,GAAsB,MAAtB;AACAjD,qBAAKgD,KAAL,CAAWC,OAAX,GAAqB,MAArB;AAEH,aAbI,MAaE,IAAG1B,kBAAkBiB,OAAlB,KAA8B,IAAjC,EAAuC;AAC1C1B,wBAAQkC,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACH;AACJ;;AAED,YAAMiB,KAAK,0BAAgBnC,aAAhB,CAAX;;AAEA,YAAI0B,2BAA2B,KAA/B,EAAsC;AAClCzB,kCAAsB;AAClBmC,yBAAS,OADS;AAElBC,4BAAY,IAFM;AAGlBC,4BAAY;AACRC,4BAAQ,CAAC;AADD,iBAHM;AAMlBC,0BAAU;AACNC,uBAAG;AADG,iBANQ;AASlBC,2BAAW;AACPC,0BAAM,cAAUC,CAAV,EAAa;AACf,4BAAID,OAAO,MAAX;;AAEAE,8BAAMC,IAAN,CAAWlB,KAAKmB,SAAL,CAAe/C,aAAf,CAAX,EAA0Ca,OAA1C,CAAkD,UAACmC,IAAD,EAAU;AACxD,gCAAIA,KAAK,CAAL,IAAU,CAAV,IAAeA,KAAK,CAAL,MAAYJ,EAAEI,IAAjC,EAAuC;AACnCL,uCAAO,QAAP;AACH;AACJ,yBAJD;;AAMA,+BAAOA,IAAP;AACH,qBAXM;AAYPM,4BAAQ;AAZD,iBATO;AAuBlBC,4BAAY,EAACP,MAAM,OAAP,EAvBM;AAwBlBQ,4BAAY;AAxBM,aAAtB;AA0BH;;AAED,YAAMC,UAAUP,MAAMC,IAAN,CAAWlB,KAAKyB,MAAL,CAAYrD,aAAZ,CAAX,CAAhB;AACAnB,gBAAQkD,SAAR,QAAuB,CAAE,CAAC,OAAD,EAAU,OAAV,WAA0Bc,MAAMC,IAAN,CAAWlB,KAAKyB,MAAL,CAAYrD,aAAZ,EAA2BsD,MAA3B,EAAX,EAAgDC,MAAhD,CAAuD,UAACC,GAAD,EAAM1B,KAAN;AAAA,mBAAgB0B,MAAI1B,KAApB;AAAA,SAAvD,EAAkF,CAAlF,CAA1B,CAAF,4BAAwHsB,OAAxH,GAAkIK,GAAlI,CAAsI,UAACC,IAAD,EAAU;AACnK,mBAAOA,KAAKC,IAAL,CAAU,IAAV,CAAP;AACH,SAFsB,EAEpBA,IAFoB,CAEf,IAFe,CAAvB;;AAIA,YAAG,OAAO5D,qBAAP,KAAiC,UAApC,EAAgD;AAC5CxC,mBAAOqG,mBAAP,CAA2B,QAA3B,EAAqC7D,qBAArC;AACH;;AAED;;;AAGAnB,eAAOmD,SAAP,QAAsB1B,mBAAmBL,aAAnB,EAAkCyD,GAAlC,CAAsC,UAACC,IAAD,EAAU;AAClE,mBAAOA,KAAKD,GAAL,CAAS,UAACI,GAAD,EAAS;AACrB,uBAAOA,QAAQ,CAAR,GAAaA,GAAb,kDAA8DA,GAA9D,YAAP;AACH,aAFM,EAEJF,IAFI,CAEC,GAFD,CAAP;AAGH,SAJqB,EAInBA,IAJmB,CAId,IAJc,CAAtB;;AAMA7D,aAAKmB,KAAL,CAAW6C,MAAX,GAAwB,MAAIxC,KAAKyC,KAAL,CAAWzC,KAAK0C,GAAL,CAAShE,cAAcO,KAAd,GAAsBJ,MAA/B,EAAuC,CAAvC,CAAX,IAAsDmB,KAAKyC,KAAL,CAAW,CAAX,CAAtD,GAAoE,EAAhG;;AAEAnC,aAAKqC,IAAL,CAAUjE,aAAV,EAAyBC,mBAAzB;;AAEAzB,aAAKsD,KAAL,GAAaoC,SAAS5C,KAAK6C,KAAL,CAAWtB,MAAMC,IAAN,CAAWlB,KAAKmB,SAAL,CAAe/C,aAAf,EAA8BsD,MAA9B,EAAX,EAAmDC,MAAnD,CAA0D,UAACC,GAAD,EAAM1B,KAAN;AAAA,mBAAgB0B,MAAI,IAAE,CAAF,GAAI1B,KAAxB;AAAA,SAA1D,EAAyF,CAAzF,CAAX,CAAT,CAAb;;AAEA,YAAMsC,oBAAoBF,SAAS5C,KAAK6C,KAAL,CAAWtB,MAAMC,IAAN,CAAWlB,KAAKyB,MAAL,CAAYrD,aAAZ,EAA2BsD,MAA3B,EAAX,EAAgDC,MAAhD,CAAuD,UAACC,GAAD,EAAM1B,KAAN;AAAA,mBAAgBA,UAAU,CAAV,GAAc0B,MAAI,CAAlB,GAAqBA,GAArC;AAAA,SAAvD,EAAiG,CAAjG,CAAX,CAAT,CAA1B;AACA/E,cAAMqD,KAAN,GAAcsC,iBAAd;;AAEA,YAAMC,YAAYrE,cAAcO,KAAd,GAAsBJ,MAAxC;AACA,YAAGiE,oBAAoB,CAAvB,EAA0B;AACtBnG,iBAAK6D,KAAL;AACH,SAFD,MAEO,IAAG9B,cAAcQ,KAAd,GAAsBL,MAAtB,KAAiCkE,aAAWA,YAAU,CAArB,IAAwB,CAA5D,EAA+D;AAClEpG,iBAAK6D,KAAL;AACH,SAFM,MAGF;AACD,gBAAMwC,MAAMnC,GAAGoC,gBAAH,CAAoBpD,aAAanB,cAAcO,KAAd,GAAsB,CAAtB,CAAb,EAAuCP,cAAcO,KAAd,GAAsBiE,OAAtB,GAAgC,CAAhC,CAAvC,CAApB,CAAZ;AACAvG,iBAAK6D,KAAL,GAAcwC,QAAQ,IAAR,GAAe,IAAf,oCAAqDA,IAAIX,IAAJ,CAAS,IAAT,CAArD,OAAd;AACH;;AAED,YAAI;AACAjF,kBAAMsC,UAAN,CAAiBE,OAAjB,GAA2B,OAA3B;AACAxC,kBAAMoD,KAAN,GAAcoC,SAAStC,KAAK6C,iBAAL,CAAuBzE,aAAvB,CAAT,CAAd;AACH,SAHD,CAGE,OAAO0E,CAAP,EAAU;AACRhG,kBAAMsC,UAAN,CAAiBE,OAAjB,GAA2B,MAA3B;AACH;;AAED,YAAIyD,WAAJ;AACA5E,gCAAwB,iCAAM;AAC1B;AACA6E,yBAAaD,EAAb;;AAEAA,iBAAKE,WAAW,YAAM;AAClBzE,0BAAU,IAAV;AACH,aAFI,EAEF,GAFE,CAAL;AAGH,SAPD;AAQA7C,eAAOI,gBAAP,CAAwB,QAAxB,EAAkCoC,qBAAlC;;AAEA,eAAOC,aAAP;AACH;;AAEDP,wBAAoB9B,gBAApB,CAAqC,QAArC,EAA+C,YAAM;AACjD,YAAImH,SAAS,IAAIC,UAAJ,EAAb;AACAD,eAAOE,UAAP,CAAkBvF,oBAAoBwF,KAApB,CAA0B,CAA1B,CAAlB,EAAgD,OAAhD;;AAEAH,eAAOI,MAAP,GAAgB,UAAUC,GAAV,EAAe;AAC3B,gBAAMC,WAAWD,IAAIE,MAAJ,CAAWC,MAAX,CAAkBC,KAAlB,CAAwB,IAAxB,EAA8B9B,GAA9B,CAAkC,UAACC,IAAD,EAAU;AACzD,uBAAOA,KAAK6B,KAAL,CAAW,IAAX,EAAiB9B,GAAjB,CAAqB,UAAC+B,OAAD,EAAa;AACrC,2BAAOtB,SAASsB,OAAT,CAAP;AACH,iBAFM,CAAP;AAGH,aAJgB,CAAjB;;AAMAjI,mBAAO+C,CAAP,GAAWN,gBAAgB4B,KAAK6D,YAAL,CAAkBL,QAAlB,CAA3B;AACAhF,sBAAU,IAAV;AACH,SATD;AAUH,KAdD;;AAgBAxC,QAAID,gBAAJ,CAAqB,WAArB,EAAkC,YAAM;AACpCD,iBAASG,cAAT,CAAwB,wBAAxB,EAAkDkE,SAAlD,GAA8DnE,IAAIkE,KAAlE;AACH,KAFD;;AAIAhE,QAAIH,gBAAJ,CAAqB,WAArB,EAAkC,YAAM;AACpCD,iBAASG,cAAT,CAAwB,uBAAxB,EAAiDkE,SAAjD,GAA6DjE,IAAIgE,KAAjE;AACH,KAFD;;AAIA/D,QAAIJ,gBAAJ,CAAqB,WAArB,EAAkC,YAAM;AACpCD,iBAASG,cAAT,CAAwB,sBAAxB,EAAgDkE,SAAhD,GAA4DhE,IAAI+D,KAAhE;AACH,KAFD;;AAIA9D,QAAIL,gBAAJ,CAAqB,WAArB,EAAkC,YAAM;AACpCD,iBAASG,cAAT,CAAwB,yBAAxB,EAAmDkE,SAAnD,GAA+D/D,IAAI8D,KAAnE;AACH,KAFD;;AAIAtC,sBAAkB7B,gBAAlB,CAAmC,QAAnC,EAA6C,YAAM;AAC/C8B,4BAAoBqC,KAApB,GAA4B,EAA5B;AACH,KAFD;;AAIA,KAAClE,GAAD,EAAME,GAAN,EAAWE,GAAX,EAAgBD,GAAhB,EAAqB8C,OAArB,CAA6B,UAAC6E,KAAD,EAAW;AACxCA,cAAM/H,gBAAN,CAAuB,QAAvB,EAAiC,YAAM;AAC/ByC;AACH,SAFL;AAGC,KAJD;;AAMAV,WAAO/B,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACnCJ,eAAO+C,CAAP,GAAWF,UAAU8D,SAASpG,IAAIgE,KAAb,CAAV,EAA+B6D,WAAW/H,IAAIkE,KAAf,CAA/B,CAAX;AACH,KAFD;;AAIAnC,+BAA2BhC,gBAA3B,CAA4C,OAA5C,EAAqD,YAAM;AACvDkF,cAAMC,IAAN,CAAWlB,KAAKmB,SAAL,CAAe/C,aAAf,CAAX,EAA0Ca,OAA1C,CAAkD,UAACmC,IAAD,EAAO9C,CAAP,EAAa;AAC3D,gBAAG8C,KAAK,CAAL,MAAY,CAAf,EAAkB;AACdhD,8BAAc4F,UAAd,CAAyB5C,KAAK,CAAL,CAAzB;AACH;AACJ,SAJD;AAKAzF,eAAO+C,CAAP,GAAWF,UAAU8D,SAASpG,IAAIgE,KAAb,CAAV,EAA+B6D,WAAW/H,IAAIkE,KAAf,CAA/B,EAAsD,IAAtD,EAA4D,KAA5D,CAAX;AACH,KAPD;;AASAlC,0BAAsBjC,gBAAtB,CAAuC,OAAvC,EAAgD,YAAM;AAClDkF,cAAMC,IAAN,CAAWD,MAAMC,IAAN,CAAWlB,KAAKyB,MAAL,CAAYrD,aAAZ,CAAX,CAAX,EAAmDa,OAAnD,CAA2D,UAACmC,IAAD,EAAU;AACjE,gBAAGA,KAAK,CAAL,MAAY,CAAf,EAAkB;AACdhD,8BAAc4F,UAAd,CAAyB5C,KAAK,CAAL,CAAzB;AACH;AACJ,SAJD;AAKAzF,eAAO+C,CAAP,GAAWF,UAAU8D,SAASpG,IAAIgE,KAAb,CAAV,EAA+B6D,WAAW/H,IAAIkE,KAAf,CAA/B,EAAsD,IAAtD,EAA4D,KAA5D,CAAX;AACH,KAPD;;AAUAjC,oBAAgBlC,gBAAhB,CAAiC,OAAjC,EAA0C,YAAM;AAC5C,YAAIkI,gBAAgB,EAApB;AACA,YAAIC,qBAAqB,EAAzB;AACA,YAAIrB,oBAAoB,EAAxB;;AAEA,YAAMsB,IAAI7B,SAASpG,IAAIgE,KAAb,CAAV;AACA,YAAMkE,IAAIL,WAAW/H,IAAIkE,KAAf,CAAV;AACA,YAAImE,QAAQrE,KAAKC,eAAL,CAAqBkE,CAArB,EAAwBC,CAAxB,CAAZ;;AAEA,YAAME,yBAA0BH,KAAGA,IAAE,CAAL,KAASA,IAAE,CAAX,CAAD,GAAgB,CAAhB,GAAkBzE,KAAK0C,GAAL,CAASgC,CAAT,EAAW,CAAX,EAAcG,OAAd,CAAsB,CAAtB,CAAjD;AACA,YAAMC,6BAA6B,CAACL,IAAEzE,KAAK0C,GAAL,CAAU,IAAEgC,CAAZ,EAAgBD,IAAE,CAAlB,CAAH,EAAyBI,OAAzB,CAAiC,CAAjC,CAAnC;;AAGA,YAAME,cAAcnC,SAASoC,OAAO,mCAAP,EAA4C,GAA5C,CAAT,CAApB;;AAEA,YAAG,OAAOD,WAAP,KAAuB,QAAvB,IAAmCA,eAAe,CAAlD,IAAuDE,MAAMF,WAAN,MAAuB,IAAjF,EAAuF;AACnF,mBAAOG,8BAA2BH,WAA3B,SAAP;AACH;;AAED,aAAI,IAAInG,MAAE,CAAV,EAAaA,MAAEmG,WAAf,EAA4BnG,KAA5B,EAAiC;AAC7B2F,0BAAcnF,IAAd,CAAmBiF,WAAWrE,KAAK6C,KAAL,CAAWtB,MAAMC,IAAN,CAAWlB,KAAKmB,SAAL,CAAekD,KAAf,EAAsB3C,MAAtB,EAAX,EAA2CC,MAA3C,CAAkD,UAACC,GAAD,EAAM1B,KAAN;AAAA,uBAAgB0B,MAAI,IAAE,CAAF,GAAI1B,KAAxB;AAAA,aAAlD,EAAiF,CAAjF,CAAX,CAAX,CAAnB;;AAEAgE,+BAAmBpF,IAAnB,CAAwBiF,WAAWrE,KAAK6C,KAAL,CAAWtB,MAAMC,IAAN,CAAWlB,KAAKyB,MAAL,CAAY4C,KAAZ,EAAmB3C,MAAnB,EAAX,EAAwCC,MAAxC,CAA+C,UAACC,GAAD,EAAM1B,KAAN;AAAA,uBAAgBA,UAAU,CAAV,GAAc0B,MAAI,CAAlB,GAAqBA,GAArC;AAAA,aAA/C,EAAyF,CAAzF,CAAX,CAAX,CAAxB;AACAiB,8BAAkB/D,IAAlB,CAAuBkB,KAAK6C,iBAAL,CAAuBwB,KAAvB,CAAvB;;AAEAA,oBAAQrE,KAAKC,eAAL,CAAqBkE,CAArB,EAAwBC,CAAxB,CAAR;AACH;;AAED,YAAMS,0BAA0BZ,cAActC,MAAd,CAAqB,UAACC,GAAD,EAAM1B,KAAN;AAAA,mBAAgB0B,MAAI1B,KAApB;AAAA,SAArB,EAAgD,CAAhD,IAAoD+D,cAAc1F,MAAlG;AACA,YAAMuG,8BAA8BZ,mBAAmBvC,MAAnB,CAA0B,UAACC,GAAD,EAAM1B,KAAN;AAAA,mBAAgB0B,MAAI1B,KAApB;AAAA,SAA1B,EAAqD,CAArD,IAAyDgE,mBAAmB3F,MAAhH;AACA,YAAMwG,8BAA8BlC,kBAAkBlB,MAAlB,CAAyB,UAACC,GAAD,EAAM1B,KAAN;AAAA,mBAAgB0B,MAAI1B,KAApB;AAAA,SAAzB,EAAoD,CAApD,IAAwD2C,kBAAkBtE,MAA9G;;AAEAqG,iCAAuBH,WAAvB,yBAAsDN,CAAtD,UAA4DC,CAA5D,8DAAsHS,wBAAwBN,OAAxB,CAAgC,CAAhC,CAAtH,uBAA0KD,sBAA1K,qDAA6OQ,4BAA4BP,OAA5B,CAAoC,CAApC,CAA7O,uBAAqSC,0BAArS,gDAA0WO,4BAA4BR,OAA5B,CAAoC,CAApC,CAA1W;AACH,KAjCD;;AAmCA5I,WAAO+C,CAAP,GAAWF,WAAX;AACH,CAhWD,E;;;;;;;;;;;;;;;;;;;ICNqBwG,W;AACjB,yBAAYtG,CAAZ,EAAe;AAAA;;AACX,aAAKuG,EAAL,GAAUvG,CAAV;AACH;;;;mCAEU;AACP,mBAAO,KAAKuG,EAAZ;AACH;;AAED;;;;;;;;;yCAMiBC,C,EAAG;AAAA;;AAChB,gBAAMC,UAAU,EAAhB;AACA,gBAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACvC,sBAAKL,EAAL,CAAQrG,KAAR,CAAc0G,QAAd,EAAwBrG,OAAxB,CAAgC,UAACC,IAAD,EAAU;AACtC,wBAAGiG,QAAQI,OAAR,CAAgBrG,KAAK,CAAL,CAAhB,MAA6B,CAAC,CAAjC,EAAoC;AAChCiG,gCAAQrG,IAAR,CAAaI,KAAK,CAAL,CAAb;AACAkG,sCAAcC,KAAd,EAAqBnG,KAAK,CAAL,CAArB,EAA8BiG,OAA9B;AACH;AACJ,iBALD;AAMH,aAPD;;AASAC,0BAAcF,CAAd,EAAiBA,CAAjB;;AAEA,gBAAGC,QAAQ5G,MAAR,KAAmB,KAAK0G,EAAL,CAAQtG,KAAR,GAAgBJ,MAAtC,EAA8C;AAC1C,uBAAO,IAAP;AACH,aAFD,MAEO;AACH;AACA,uBAAO4G,OAAP;AACH;AACJ;;AAED;;;;;;;;;;;;iCASSD,C,EAAGM,C,EAAG;AAAA;;AACX,gBAAMpI,QAAQ,EAAd;AACA,gBAAMgI,gBAAgB,SAAhBA,aAAgB,CAACK,OAAD,EAAUC,YAAV,EAAyD;AAAA,oBAAjCC,IAAiC,uEAA1B,EAA0B;AAAA,oBAAtBC,SAAsB;AAAA,oBAAXC,IAAW,uEAAN,CAAM;;AAC3E,oBAAIH,iBAAiBD,OAArB,EAA8B;AAC1BrI,0BAAM0B,IAAN,CAAW6G,IAAX;AACH,iBAFD,MAGK,IAAGE,SAAS,CAAT,IAAcH,iBAAiBE,SAAlC,EAA6C;AAC9C;AACH,iBAFI,MAGA;AACD,2BAAKX,EAAL,CAAQrG,KAAR,CAAc8G,YAAd,EAA4BzG,OAA5B,CAAoC,UAACC,IAAD,EAAU;AAC1C,4BAAGyG,KAAKJ,OAAL,CAAarG,KAAK,CAAL,CAAb,MAA0B,CAAC,CAA9B,EAAiC;AAC7BkG,0CAAcK,OAAd,EAAuBvG,KAAK,CAAL,CAAvB,+BAAoCyG,IAApC,IAA0CzG,KAAK,CAAL,CAA1C,IAAoD0G,SAApD,EAA+DC,OAAK,CAApE;AACH;AACJ,qBAJD;AAKH;AACJ,aAdD;;AAgBAT,0BAAcI,CAAd,EAAiBN,CAAjB,EAAoB,CAACA,CAAD,CAApB,EAAyBA,CAAzB;;AAEA,mBAAO9H,KAAP;AACH;;;;;;kBAlEgB4H,W;;;;;;;;;;;;;;;;;;;ICAAc,uB;AACjB,qCAAYlH,KAAZ,EAAmB;AAAA;;AACf,aAAKmH,MAAL,GAAcnH,SAAS,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAD,EAAU,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAAV,EAAoB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAApB,EAA6B,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAA7B,EACnB,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CADmB,EACP,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADO,EACE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CADF,EACW,CAAC,EAAD,EAAI,CAAJ,EAAM,CAAN,CADX,EAEnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFmB,EAEV,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CAFU,EAEA,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAFA,EAEW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAFX,EAGnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHmB,EAGV,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAHU,EAGC,CAAC,EAAD,EAAI,CAAJ,EAAM,CAAN,CAHD,EAGW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAHX,EAInB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAJmB,EAIR,CAAC,EAAD,EAAI,CAAJ,EAAM,CAAN,CAJQ,EAIE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAJF,EAIW,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CAJX,EAKnB,CAAC,EAAD,EAAI,EAAJ,EAAO,CAAP,CALmB,EAKR,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,CALQ,EAKI,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,CALJ,EAKc,CAAC,EAAD,EAAI,CAAJ,EAAM,EAAN,CALd,EAMnB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANmB,EAMV,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CANU,CAAvB;AAOH;;AAED;;;;;;;;gCAIQsG,C,EAAG;AACP,gBAAItG,QAAQ,EAAZ;AACA,iBAAKmH,MAAL,CAAY9G,OAAZ,CAAoB,UAACC,IAAD,EAAU;AAC1B,oBAAGA,KAAK,CAAL,MAAYgG,CAAZ,IAAiBhG,KAAK,CAAL,MAAWgG,CAA/B,EAAkC;AAC9B,wBAAMc,aAAa9G,KAAK,CAAL,MAAYgG,CAAZ,GAAgB,CAAChG,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,EAAmBA,KAAK,CAAL,CAAnB,CAAhB,GAA8C,CAACA,KAAK,CAAL,CAAD,EAAUA,KAAK,CAAL,CAAV,EAAmBA,KAAK,CAAL,CAAnB,CAAjE;AACAN,0BAAME,IAAN,CAAWkH,UAAX;AACH;AACJ,aALD;;AAOA,mBAAOpH,KAAP;AACH;;AAGD;;;;;;;;;;;;qCASasG,C,EAAGM,C,EAAG;AAAA;;AACf,gBAAM5G,QAAQ,EAAd;AACA,gBAAMwG,gBAAgB,SAAhBA,aAAgB,CAACK,OAAD,EAAUC,YAAV,EAAuE;AAAA,oBAA/CC,IAA+C,uEAAxC,EAAwC;AAAA,oBAApCM,OAAoC,uEAA1B,EAA0B;AAAA,oBAAtBL,SAAsB;AAAA,oBAAXC,IAAW,uEAAN,CAAM;;AACzF,oBAAIH,iBAAiBD,OAArB,EAA8B;AAC1B7G,0BAAME,IAAN,CAAWmH,OAAX;AACH,iBAFD,MAGK,IAAGJ,SAAS,CAAT,IAAcH,iBAAiBE,SAAlC,EAA6C;AAC9C;AACH,iBAFI,MAGA;AACD,0BAAKM,OAAL,CAAaR,YAAb,EAA2BzG,OAA3B,CAAmC,UAACC,IAAD,EAAU;AACzC,4BAAGyG,KAAKJ,OAAL,CAAarG,KAAK,CAAL,CAAb,MAA0B,CAAC,CAA9B,EAAiC;AAC7BkG,0CAAcK,OAAd,EAAuBvG,KAAK,CAAL,CAAvB,+BAAoCyG,IAApC,IAA0CzG,KAAK,CAAL,CAA1C,iCAAwD+G,OAAxD,IAAiE/G,IAAjE,IAAwE0G,SAAxE,EAAmFC,OAAK,CAAxF;AACH;AACJ,qBAJD;AAKH;AACJ,aAdD;;AAgBAT,0BAAcI,CAAd,EAAiBN,CAAjB,EAAoB,CAACA,CAAD,CAApB,EAAyBA,CAAzB;;AAEA,mBAAOtG,KAAP;AACH;;AAED;;;;;;;;;;wCAOgBsG,C,EAAGM,C,EAAG;AAClB,gBAAM5G,QAAQ,KAAKuH,YAAL,CAAkBjB,CAAlB,EAAqBM,CAArB,CAAd;AACA,gBAAMY,OAAO,EAAb;AACA,gBAAIC,eAAe,EAAnB;;AAEA,iBAAI,IAAI/H,IAAE,CAAV,EAAaA,IAAEM,MAAML,MAArB,EAA6BD,GAA7B,EAAkC;AAC9B8H,qBAAK9H,CAAL,IAAU,IAAV;AACA,qBAAI,IAAIS,IAAE,CAAV,EAAaA,IAAEH,MAAMN,CAAN,EAASC,MAAxB,EAAgCQ,GAAhC,EAAqC;AACjC,wBAAGqH,KAAK9H,CAAL,MAAY,IAAf,EAAqB;AACjB8H,6BAAK9H,CAAL,IAAUM,MAAMN,CAAN,EAASS,CAAT,EAAY,CAAZ,CAAV;AACH,qBAFD,MAEO;AACHqH,6BAAK9H,CAAL,KAAWM,MAAMN,CAAN,EAASS,CAAT,EAAY,CAAZ,CAAX;AACH;AACJ;AACJ;;AAED;AACA,gBAAIuH,aAAaC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeL,IAAf,CAAX,CAAjB;AACAE,uBAAWI,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,IAAEC,CAAZ;AAAA,aAAhB;;AAEA;AACA,iBAAI,IAAIC,IAAE,CAAV,EAAaA,IAAEP,WAAW/H,MAA1B,EAAkCsI,GAAlC,EAAuC;AACnC,oBAAGT,KAAKS,CAAL,MAAYP,WAAW,CAAX,CAAf,EAA8B;AAC1BD,iCAAavH,IAAb,CAAkB,CAACsH,KAAKS,CAAL,CAAD,EAAUjI,MAAMiI,CAAN,CAAV,CAAlB;AACH;AACJ;;AAED,mBAAOR,YAAP;AACH;;;;;;kBA/FgBP,uB","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bed0a07205ccbb47c714","import JSNXWrapper from \"./JSNXWrapper\";\r\nimport PseudoWeightedEdgeGraph from \"./PseudoWeightedEdgeGraph\";\r\n\r\nwindow.pweg = PseudoWeightedEdgeGraph;\r\nwindow.jsnxw = JSNXWrapper;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const g1p = document.getElementById(\"g1-probability\");\r\n    const g1n = document.getElementById(\"g1-node-count\");\r\n    const g1r = document.getElementById(\"g1-row-count\");\r\n    const g1c = document.getElementById(\"g1-column-count\");\r\n    const g1ic = document.getElementById(\"g1-isComplete\");\r\n\r\n    const g1icd = document.getElementById(\"g1-isComplete-display\");\r\n    const g1cc = document.getElementById(\"g1-clique-count\");\r\n\r\n    const g1rd = document.getElementById(\"g1-row-count-display\");\r\n    const g1cd = document.getElementById(\"g1-column-count-display\");\r\n\r\n    const g1pd = document.getElementById(\"g1-probability-display\");\r\n    const g1nd = document.getElementById(\"g1-node-count-display\");\r\n\r\n    const g1tc = document.getElementById(\"g1-triangle-count\");\r\n    const g1tdc = document.getElementById(\"g1-disconnected-nodes-count\");\r\n\r\n    const g1tlc = document.getElementById(\"g1-largest-component-size\");\r\n\r\n    const varsInputd = document.getElementById(\"varsInput\");\r\n    const adjMat = document.getElementById(\"adjacency-matrix\");\r\n    const nodeDeg = document.getElementById(\"node-degree\");\r\n    const nodeDegd = document.getElementById(\"node-degree-display\");\r\n    const adjMatd = document.getElementById(\"adjacency-matrix-display\");\r\n    const paths = document.getElementById(\"paths\");\r\n\r\n    const fieldGraphType = document.getElementsByName(\"graphType\");\r\n\r\n    const isERGraph         = document.getElementById(\"isERGraph\");\r\n    const isCycleGraph      = document.getElementById(\"isCycleGraph\");\r\n    const isCompleteGraph   = document.getElementById(\"isCompleteGraph\");\r\n    const isTreeGraph       = document.getElementById(\"isTreeGraph\");\r\n    const isGrid2dGraph     = document.getElementById(\"isGrid2dGraph\");\r\n    const isCustomFromEdges = document.getElementById(\"isCustomFromEdges\");\r\n\r\n    const customEdgeGraphFile     = document.getElementById(\"customEdgeGraphFile\");\r\n\r\n    const doDraw = document.getElementById(\"doDraw\");\r\n    const doRemoveNonTriangularNodes = document.getElementById(\"doClearNonTriangularNodes\");\r\n    const doClearConnectedNodes = document.getElementById(\"doClearConnectedNodes\");\r\n    const doRunEstimation = document.getElementById(\"doRunEstimation\");\r\n\r\n    const main = document.getElementById(\"main\");\r\n\r\n\r\n    let previousResizeHandler;\r\n    let previousGraph;\r\n    let previousGraphConfig;\r\n\r\n    for(let i=0; i<fieldGraphType.length; i++) {\r\n        fieldGraphType[i].addEventListener(\"change\", () => {\r\n            drawGraph();\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Graph} g\r\n     * @returns {Array<Array<int>>}\r\n     */\r\n    function getAdjacencyMatrix(g) {\r\n        const nodes = g.nodes();\r\n        const edges = g.edges();\r\n        const adjMat = [];\r\n\r\n        if(isGrid2dGraph.checked === true) {\r\n            return [[\"\"]];\r\n        }\r\n\r\n        for(let i=0; i<nodes.length; i++) {\r\n            adjMat.push([]);\r\n            for(let j=0; j<nodes.length; j++) {\r\n                let edgeFound = 0;\r\n                edges.forEach((edge) => {\r\n                    if((edge[0] === i && edge[1] === j) || (edge[0] === j && edge[1] === i)){\r\n                        edgeFound = 1;\r\n                    }\r\n                });\r\n                adjMat[i][j] = edgeFound;\r\n            }\r\n        }\r\n\r\n        return adjMat;\r\n    }\r\n\r\n    function initControls() {\r\n        g1p.parentNode.style.display = \"none\";\r\n        g1n.parentNode.style.display = \"none\";\r\n        g1r.parentNode.style.display = \"none\";\r\n        g1c.parentNode.style.display = \"none\";\r\n\r\n        g1icd.style.display = \"block\";\r\n        g1ic.style.display = \"block\";\r\n\r\n        // Not available for all graphs\r\n        doRunEstimation.style.display = \"none\";\r\n        adjMatd.style.display = \"none\";\r\n        varsInputd.style.display = \"none\";\r\n    }\r\n\r\n    function getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    function drawGraph(usePreviousGraph = false, usePreviousGraphConfig = false) {\r\n        // The graph needs to redraw on window resize to recenter itself in the view\r\n        if (usePreviousGraph === false) {\r\n            if (typeof previousGraph === \"object\") {\r\n                previousGraph.clear();\r\n            }\r\n\r\n            initControls();\r\n\r\n            if (isERGraph.checked === true) {\r\n                previousGraph = window.g = jsnx.erdosRenyiGraph(g1n.value, g1p.value);\r\n\r\n                g1p.parentNode.style.display = \"block\";\r\n                g1n.parentNode.style.display = \"block\";\r\n                adjMatd.style.display = \"block\";\r\n                doRunEstimation.style.display = \"inline-block\";\r\n                varsInputd.style.display = \"block\";\r\n\r\n                g1nd.innerHTML = g1n.value;\r\n                g1pd.innerHTML = g1p.value;\r\n            }\r\n            else if (isCycleGraph.checked === true) {\r\n                previousGraph = window.g = jsnx.cycleGraph(g1n.value);\r\n\r\n                g1n.parentNode.style.display = \"block\";\r\n                adjMatd.style.display = \"block\";\r\n                varsInputd.style.display = \"block\";\r\n                g1nd.innerHTML = g1n.value;\r\n            }\r\n            else if (isCompleteGraph.checked === true) {\r\n                previousGraph = window.g = jsnx.completeGraph(g1n.value);\r\n\r\n                g1n.parentNode.style.display = \"block\";\r\n                adjMatd.style.display = \"block\";\r\n                varsInputd.style.display = \"block\";\r\n                g1nd.innerHTML = g1n.value;\r\n            }\r\n            else if (isGrid2dGraph.checked === true) {\r\n                previousGraph = window.g = jsnx.grid2dGraph(g1r.value, g1c.value);\r\n\r\n                g1rd.innerHTML = g1r.value;\r\n                g1cd.innerHTML = g1c.value;\r\n\r\n                g1r.parentNode.style.display = \"block\";\r\n                g1c.parentNode.style.display = \"block\";\r\n                varsInputd.style.display = \"block\";\r\n\r\n                g1icd.style.display = \"none\";\r\n                g1ic.style.display = \"none\";\r\n\r\n            } else if(isCustomFromEdges.checked === true) {\r\n                adjMatd.style.display = \"block\";\r\n            }\r\n        }\r\n\r\n        const gw = new JSNXWrapper(previousGraph);\r\n\r\n        if (usePreviousGraphConfig === false) {\r\n            previousGraphConfig = {\r\n                element: '#main',\r\n                withLabels: true,\r\n                layoutAttr: {\r\n                    charge: -200\r\n                },\r\n                nodeAttr: {\r\n                    r: 15\r\n                },\r\n                nodeStyle: {\r\n                    fill: function (d) {\r\n                        let fill = \"#000\";\r\n\r\n                        Array.from(jsnx.triangles(previousGraph)).forEach((node) => {\r\n                            if (node[1] > 0 && node[0] === d.node) {\r\n                                fill = \"tomato\";\r\n                            }\r\n                        });\r\n\r\n                        return fill;\r\n                    },\r\n                    stroke: \"#000\"\r\n                },\r\n                labelStyle: {fill: 'white'},\r\n                stickyDrag: true\r\n            };\r\n        }\r\n\r\n        const degress = Array.from(jsnx.degree(previousGraph));\r\n        nodeDeg.innerHTML = `${([[\"knoop\", \"graad\", `som=${Array.from(jsnx.degree(previousGraph).values()).reduce((sum, value) => sum+value, 0)}`], ...degress]).map((item) => {\r\n            return item.join(\"\\t\")\r\n        }).join(\"\\n\")}`;\r\n\r\n        if(typeof previousResizeHandler === \"function\") {\r\n            window.removeEventListener(\"resize\", previousResizeHandler);\r\n        }\r\n\r\n        /**\r\n         * Set Adjacency\r\n         */\r\n        adjMat.innerHTML = `${getAdjacencyMatrix(previousGraph).map((item) => {\r\n            return item.map((bit) => {\r\n                return bit === 1 ?  bit : `<span style=\"color: rgba(0, 0, 0, 0.6)\">${bit}</span>`;\r\n            }).join(\" \")\r\n        }).join(\"\\n\")}`;\r\n\r\n        main.style.height = `${(150+Math.log10(Math.pow(previousGraph.nodes().length, 7))/Math.log10(2)*15)}px`;\r\n\r\n        jsnx.draw(previousGraph, previousGraphConfig);\r\n\r\n        g1tc.value = parseInt(Math.round(Array.from(jsnx.triangles(previousGraph).values()).reduce((sum, value) => sum+1/3*value, 0)));\r\n\r\n        const isolatedNodeCount = parseInt(Math.round(Array.from(jsnx.degree(previousGraph).values()).reduce((sum, value) => value === 0 ? sum+1: sum, 0)));\r\n        g1tdc.value = isolatedNodeCount;\r\n\r\n        const nodeCount = previousGraph.nodes().length;\r\n        if(isolatedNodeCount > 0) {\r\n            g1ic.value = `nee (Aantal Geïsoleerde Knopen > 0)`;\r\n        } else if(previousGraph.edges().length === nodeCount*(nodeCount-1)/2) {\r\n            g1ic.value = `ja (Volledige Graaf)`;\r\n        }\r\n        else {\r\n            const res = gw.isFullyConnected(getRandomInt(previousGraph.nodes()[0], previousGraph.nodes().reverse()[0]));\r\n            g1ic.value =  res === true ? \"ja\" : `nee (bevat losse component (${res.join(\", \")}))`;\r\n        }\r\n\r\n        try {\r\n            g1tlc.parentNode.display = \"block\";\r\n            g1tlc.value = parseInt(jsnx.graphCliqueNumber(previousGraph));\r\n        } catch (e) {\r\n            g1tlc.parentNode.display = \"none\";\r\n        }\r\n\r\n        let id;\r\n        previousResizeHandler = () => {\r\n            // Prevent bubbling up\r\n            clearTimeout(id);\r\n\r\n            id = setTimeout(() => {\r\n                drawGraph(true);\r\n            }, 500);\r\n        };\r\n        window.addEventListener(\"resize\", previousResizeHandler);\r\n\r\n        return previousGraph;\r\n    }\r\n\r\n    customEdgeGraphFile.addEventListener(\"change\", () => {\r\n        let reader = new FileReader();\r\n        reader.readAsText(customEdgeGraphFile.files[0], \"UTF-8\");\r\n\r\n        reader.onload = function (evt) {\r\n            const edgeList = evt.target.result.split(\"\\n\").map((item) => {\r\n                return item.split(\"\\t\").map((numeric) => {\r\n                    return parseInt(numeric);\r\n                });\r\n            });\r\n\r\n            window.g = previousGraph = jsnx.fromEdgelist(edgeList);\r\n            drawGraph(true);\r\n        };\r\n    });\r\n\r\n    g1p.addEventListener(\"mousemove\", () => {\r\n        document.getElementById(\"g1-probability-display\").innerHTML = g1p.value;\r\n    });\r\n\r\n    g1n.addEventListener(\"mousemove\", () => {\r\n        document.getElementById(\"g1-node-count-display\").innerHTML = g1n.value;\r\n    });\r\n\r\n    g1r.addEventListener(\"mousemove\", () => {\r\n        document.getElementById(\"g1-row-count-display\").innerHTML = g1r.value;\r\n    });\r\n\r\n    g1c.addEventListener(\"mousemove\", () => {\r\n        document.getElementById(\"g1-column-count-display\").innerHTML = g1c.value;\r\n    });\r\n\r\n    isCustomFromEdges.addEventListener(\"change\", () => {\r\n        customEdgeGraphFile.value = \"\";\r\n    });\r\n\r\n    [g1p, g1n, g1c, g1r].forEach((field) => {\r\n    field.addEventListener(\"change\", () => {\r\n            drawGraph();\r\n        });\r\n    });\r\n\r\n    doDraw.addEventListener(\"click\", () => {\r\n        window.g = drawGraph(parseInt(g1n.value), parseFloat(g1p.value));\r\n    });\r\n\r\n    doRemoveNonTriangularNodes.addEventListener(\"click\", () => {\r\n        Array.from(jsnx.triangles(previousGraph)).forEach((node, i) => {\r\n            if(node[1] === 0) {\r\n                previousGraph.removeNode(node[0]);\r\n            }\r\n        });\r\n        window.g = drawGraph(parseInt(g1n.value), parseFloat(g1p.value), true, false);\r\n    });\r\n\r\n    doClearConnectedNodes.addEventListener(\"click\", () => {\r\n        Array.from(Array.from(jsnx.degree(previousGraph))).forEach((node) => {\r\n            if(node[1] !== 0) {\r\n                previousGraph.removeNode(node[0]);\r\n            }\r\n        });\r\n        window.g = drawGraph(parseInt(g1n.value), parseFloat(g1p.value), true, false);\r\n    });\r\n\r\n\r\n    doRunEstimation.addEventListener(\"click\", () => {\r\n        let triangleCount = [];\r\n        let isolatedNodesCount = [];\r\n        let graphCliqueNumber = [];\r\n\r\n        const n = parseInt(g1n.value);\r\n        const p = parseFloat(g1p.value);\r\n        let graph = jsnx.erdosRenyiGraph(n, p);\r\n\r\n        const theoreticTriangleCount = (n*(n-1)*(n-2))/6*Math.pow(p,3).toFixed(4);\r\n        const theoreticIsolatedNodeCount = (n*Math.pow((1-p), n-1)).toFixed(4);\r\n\r\n\r\n        const monsterSize = parseInt(prompt(\"Voer in de monstergrootte (k > 0)\", 100));\r\n\r\n        if(typeof monsterSize !== \"number\" || monsterSize <= 0 || isNaN(monsterSize) === true) {\r\n            return alert(`Ongeldige invoer \"${monsterSize}\".`);\r\n        }\r\n\r\n        for(let i=0; i<monsterSize; i++) {\r\n            triangleCount.push(parseFloat(Math.round(Array.from(jsnx.triangles(graph).values()).reduce((sum, value) => sum+1/3*value, 0))));\r\n\r\n            isolatedNodesCount.push(parseFloat(Math.round(Array.from(jsnx.degree(graph).values()).reduce((sum, value) => value === 0 ? sum+1: sum, 0))));\r\n            graphCliqueNumber.push(jsnx.graphCliqueNumber(graph));\r\n\r\n            graph = jsnx.erdosRenyiGraph(n, p);\r\n        }\r\n\r\n        const experimentTriangleCount = triangleCount.reduce((sum, value) => sum+value, 0)/(triangleCount.length);\r\n        const experimentIsolatedNodeCount = isolatedNodesCount.reduce((sum, value) => sum+value, 0)/(isolatedNodesCount.length);\r\n        const experimentGraphCliqueNumber = graphCliqueNumber.reduce((sum, value) => sum+value, 0)/(graphCliqueNumber.length);\r\n\r\n        alert(`Onderzoek met ${monsterSize} monsters voor G(${n}, ${p}) is voltooid.\\n ----\\n Gemiddelde aantal driehoeken: ${experimentTriangleCount.toFixed(4)} (Theoretisch: ${theoreticTriangleCount})\\n Gemiddelde aantal geïsoleerde knopen: ${experimentIsolatedNodeCount.toFixed(4)} (Theoretisch: ${theoreticIsolatedNodeCount})\\n Gemiddelde grootte grootste clique: ${experimentGraphCliqueNumber.toFixed(4)} `);\r\n    });\r\n\r\n    window.g = drawGraph();\r\n});\n\n\n// WEBPACK FOOTER //\n// ./js/main.js","export default class JSNXWrapper{\r\n    constructor(g) {\r\n        this._g = g;\r\n    }\r\n\r\n    getGraph() {\r\n        return this._g;\r\n    }\r\n\r\n    /**\r\n     * If the graph contains a subgraph then it is not fully connected;\r\n     *\r\n     * @param {int} u\r\n     * @returns (Array<int>|boolean)\r\n     */\r\n    isFullyConnected(u) {\r\n        const visited = [];\r\n        const walkRecursive = (begin, previous) => {\r\n            this._g.edges(previous).forEach((edge) => {\r\n                if(visited.indexOf(edge[1]) === -1) {\r\n                    visited.push(edge[1]);\r\n                    walkRecursive(begin, edge[1], visited);\r\n                }\r\n            });\r\n        };\r\n\r\n        walkRecursive(u, u);\r\n\r\n        if(visited.length === this._g.nodes().length) {\r\n            return true;\r\n        } else {\r\n            // Return subgraph\r\n            return visited;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check whether u connects to v in graph g;\r\n     *\r\n     * Note: will not work for graphs wherein node labels are arrays;\r\n     *\r\n     * @param {int} u start point\r\n     * @param {int} v end point\r\n     * @returns (Array<Array<int>>|Array<int>)\r\n     */\r\n    getPaths(u, v) {\r\n        const paths = [];\r\n        const walkRecursive = (endNode, previousNode, path = [], beginNode, step=0) => {\r\n            if (previousNode === endNode) {\r\n                paths.push(path);\r\n            }\r\n            else if(step !== 0 && previousNode === beginNode) {\r\n                return;\r\n            }\r\n            else {\r\n                this._g.edges(previousNode).forEach((edge) => {\r\n                    if(path.indexOf(edge[1]) === -1) {\r\n                        walkRecursive(endNode, edge[1], [...path, edge[1]], beginNode, step+1);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        walkRecursive(v, u, [u], u);\r\n\r\n        return paths;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./js/JSNXWrapper.js","export default class PseudoWeightedEdgeGraph {\r\n    constructor(edges) {\r\n        this._edges = edges || [[1,8,2], [8,12,4], [1,5,8], [5,9,4],\r\n            [12,13,12], [1,2,4], [5,2,5], [12,9,2],\r\n            [9,6,6], [9,13,4], [13,10,6], [2,6,3],\r\n            [2,3,5], [13,14,6], [10,6,0], [6,3,0],\r\n            [10,14,6], [10,7,4], [3,7,9], [14,11,6],\r\n            [14,15,4], [11,15,10], [7,11,1], [15,4,10],\r\n            [7,4,3], [3,4,5]];\r\n    }\r\n\r\n    /**\r\n     * Get edges containing node u;\r\n     * @param u\r\n     */\r\n    getEdge(u) {\r\n        let edges = [];\r\n        this._edges.forEach((edge) => {\r\n            if(edge[0] === u || edge[1] ===u) {\r\n                const sortedEdge = edge[0] === u ? [edge[0], edge[1], edge[2]] : [edge[1], edge[0], edge[2]];\r\n                edges.push(sortedEdge);\r\n            }\r\n        });\r\n\r\n        return edges;\r\n    }\r\n\r\n\r\n    /**\r\n     * Check whether u connects to v in graph g;\r\n     *\r\n     * Note: will not work for graphs wherein node labels are arrays;\r\n     *\r\n     * @param {int} u start point\r\n     * @param {int} v end point\r\n     * @returns (Array<Array<int>>|Array<int>)\r\n     */\r\n    getEdgePaths(u, v) {\r\n        const edges = [];\r\n        const walkRecursive = (endNode, previousNode, path = [], edgeBag = [], beginNode, step=0) => {\r\n            if (previousNode === endNode) {\r\n                edges.push(edgeBag);\r\n            }\r\n            else if(step !== 0 && previousNode === beginNode) {\r\n                return;\r\n            }\r\n            else {\r\n                this.getEdge(previousNode).forEach((edge) => {\r\n                    if(path.indexOf(edge[1]) === -1) {\r\n                        walkRecursive(endNode, edge[1], [...path, edge[1]], [...edgeBag, edge], beginNode, step+1);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        walkRecursive(v, u, [u], u);\r\n\r\n        return edges;\r\n    }\r\n\r\n    /**\r\n     * Get shortest path(s); The first index is the distance;\r\n     *\r\n     * @param u\r\n     * @param v\r\n     * @returns {Array<int, Array<int>>}\r\n     */\r\n    getShortestPath(u, v) {\r\n        const edges = this.getEdgePaths(u, v);\r\n        const dist = [];\r\n        let shortestPath = [];\r\n\r\n        for(let i=0; i<edges.length; i++) {\r\n            dist[i] = null;\r\n            for(let j=0; j<edges[i].length; j++) {\r\n                if(dist[i] === null) {\r\n                    dist[i] = edges[i][j][2];\r\n                } else {\r\n                    dist[i] += edges[i][j][2];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clone dist; need to keep dist unsorted...\r\n        let sortedDist = JSON.parse(JSON.stringify(dist));\r\n        sortedDist.sort((a, b) => a-b);\r\n\r\n        // In case there are multiple shortest paths...\r\n        for(let k=0; k<sortedDist.length; k++) {\r\n            if(dist[k] === sortedDist[0]) {\r\n                shortestPath.push([dist[k], edges[k]]);\r\n            }\r\n        }\r\n\r\n        return shortestPath;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./js/PseudoWeightedEdgeGraph.js"],"sourceRoot":""}